{"version":3,"sources":["index.js"],"names":["m","n","Square","color","this","props","value","className","style","backgroundColor","transition","WebkitTransition","MozTransition","borderTopWidth","topEdge","borderBottomWidth","botEdge","borderRightWidth","rightEdge","borderLeftWidth","leftEdge","React","Component","Board","valueSet","board","map","singleRow","singleCol","renderSquare","sleep","ms","Promise","resolve","setTimeout","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","union","set1","set2","res","Set","forEach","key","add","Game","defaultBoard","Array","fill","i","j","randomizedChoice","isRunning","genSpeed","state","edges","p1","p2","abs","cloneEdges","cloneBoard","slice","edgePair","setState","delete","fullEdges","edge","console","log","size","a","reset","fillAllEdges","dfsGeneratorRecursive","resetBoardValues","cell","randomMovement","direction","removeEdge","allEdgesSet","allEdges","push","allSets","set","split","val","parseInt","p2str","has","newSet","vertex","vertexSplit","flashBoard","randomI","randomJ","visitedWalls","wallList","i1","j1","i2","j2","choice","randomWall","splice","recursiveDivide","left","right","top","bottom","verDivide","horDivide","unpicked","resetBoard","visited","oldFrontier","newFrontier","level","foundExit","foc","JSON","parse","stringify","path","unshift","isMapGenerated","alert","posI","posJ","facing","h","openSet","Heapify","openSetStr","cameFrom","gScore","fScore","Number","MAX_SAFE_INTEGER","focN","pop","reconstructPath","tentativeGScore","totalPath","shift","font","onClick","dfsGenerator","kruskalsGenerator","primsGenerator","recursiveDivGenerator","wallHugger","aStar","bfs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f5b1e1f.chunk.js","sourcesContent":["import { findByLabelText } from '@testing-library/dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Heapify from \"heapify\";\n\nconst m = 15;\nconst n = 15;\n\nclass Square extends React.Component {\nrender() {\nvar color = \"#ffffff\";\nif (this.props.value.value == 0) {\n  color = \"#ffffff\";\n} else if (this.props.value.value == 1) {\n  color = \"#3f7fbf\";\n} else if (this.props.value.value == 2) {\n  color = \"#c37979\";\n} else {\n  color = \"#339933\";\n}\nreturn (\n    <button className=\"square\" \n        style={{backgroundColor: color,\n                transition: \"all .2s ease\",\n                WebkitTransition: \"all .2s ease\",\n                MozTransition: \"all .2s ease\",\n                borderTopWidth: this.props.value.topEdge ? '1px' : '0px',\n                borderBottomWidth: this.props.value.botEdge ? '1px' : '0px',\n                borderRightWidth: this.props.value.rightEdge ? '1px' : '0px',\n                borderLeftWidth: this.props.value.leftEdge ? '1px' : '0px',\n              }}\n              \n    >\n    </button>\n);\n}\n}\n\nclass Board extends React.Component {\nrenderSquare(valueSet) {\n    return (\n    <Square\n        value={valueSet}\n    />\n    );\n}\n\nrender() {\n    let board = this.props.board;\n    \n    return (\n    <div className=\"board\">\n        {\n            board.map((singleRow) => {return (<div className=\"board-row\">\n                {singleRow.map(singleCol => {\n                    return this.renderSquare(singleCol);\n                })}\n                \n            </div>)})\n        }\n    </div>\n    );\n}\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction shuffle(array) { // Knuth shuffle\n  var currentIndex = array.length,  randomIndex;\n\n  while (0 !== currentIndex) {\n\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nfunction union(set1, set2) {\n  let res = new Set();\n  set1.forEach(key => res.add(key));\n  set2.forEach(key => res.add(key));\n  return res;\n}\n\nclass Game extends React.Component {\nconstructor(props) {\n    super(props);\n    let defaultBoard = Array(m).fill(null).map(() => (Array(n)));\n    defaultBoard[0][0] = {i: 0, j: 0, value: 0, leftEdge: false, rightEdge: false, topEdge: true, botEdge: false}\n    defaultBoard[0][n-1] = {i: 0, j: n-1, value: 0, leftEdge: false, rightEdge: true, topEdge: true, botEdge:false}\n    defaultBoard[m-1][0] = {i: m-1, j: 0, value: 0, leftEdge: true, rightEdge: false, topEdge: false, botEdge:true}\n    defaultBoard[m-1][n-1] = {i: m-1, j: n-1, value: 0, leftEdge: false, rightEdge: true, topEdge: false, botEdge: false}\n\n    // top board edge\n    for (let j = 1; j < n - 1; j++) {\n      defaultBoard[0][j] = {i: 0, j: j, value: 0, leftEdge: false, rightEdge: false, topEdge: true, botEdge: false}\n    }\n    // left board edge\n    for (let i = 1; i < m-1; i++) {\n      defaultBoard[i][0] = {i:i, j: 0, value: 0, leftEdge: true, rightEdge: false, topEdge: false, botEdge: false}\n    }\n    // bot board edge\n    for (let j= 1; j < n-1; j++) {\n      defaultBoard[m-1][j] = {i: m-1, j: j, value: 0, leftEdge: false, rightEdge: false, topEdge: false,  botEdge: true}\n    }\n    // right board edge\n    for (let i= 1; i < m-1; i++) {\n      defaultBoard[i][n-1] = {i: i, j: n-1, value: 0, leftEdge: false, rightEdge: true, topEdge: false,  botEdge: false}\n    }\n    for (let i = 1 ; i < defaultBoard.length - 1; i++) {\n        for (let j = 1; j < defaultBoard[0].length - 1; j++) {\n            defaultBoard[i][j] = {\n              i: i,\n              j: j, \n              value: 0, // 0 is unvisited, 1 is visited during generation,\n                        // 2 is visited during solution, 3 is picked after solution\n              leftEdge: false, \n              rightEdge: false,\n              topEdge: false,\n              botEdge: false,\n            };\n        }\n    }\n    this.randomizedChoice = [[0,1,2,3], [0,1,3,2], [0,2,1,3], [0,2,3,1], [0,3,1,2], [0,3,2,1],\n                              [1,0,2,3], [1,0,3,2], [1,2,0,3], [1,2,3,0], [1,3,0,2], [1,3,2,0],\n                              [2,0,1,3], [2,0,3,1], [2,1,0,3], [2,1,3,0], [2,3,0,1], [2,3,1,0],\n                              [3,0,1,2], [3,0,2,1], [3,1,0,2], [3,1,2,0], [3,2,0,1], [3,2,1,0]];\n    this.isRunning = false;\n    this.genSpeed = 1;\n    this.state = {\n        defaultBoard: defaultBoard,\n        // make sure edges and board are synced in every update method afterwards\n        board: defaultBoard,\n        edges:  new Set(), // vertex order:  'top.i-top.j-bottom.i-bottom.j' or 'left.i-left.j-right.i-right.j'\n        state: 0, // 0 - default, 1 - creating maze, 2 - created maze, 3 - finding path, 4 - found path\n    };\n}\n\naddEdge(p1, p2) {\n  if ((p1.i == p2.i && Math.abs(p1.j - p2.j) == 1) || \n      (p1.j == p2.j && Math.abs(p1.i - p2.i) == 1)) \n  {\n    var cloneEdges = new Set(this.state.edges);\n    var cloneBoard = this.state.board.slice();\n    if (p1.i == p2.i && p1.j == p2.j - 1) { // p1 to the left of p2\n      let edgePair = p1.i + \"-\" + p1.j + \"-\" + p2.i + \"-\" + p2.j;\n      cloneEdges.add(edgePair);\n      cloneBoard[p1.i][p1.j].rightEdge = true;\n    } else if (p1.i == p2.i && p1.j == p2.j + 1) { // p1 to the left of p2\n      let edgePair = p2.i + \"-\" + p2.j + \"-\" + p1.i + \"-\" + p1.j;\n      cloneEdges.add(edgePair);\n      cloneBoard[p2.i][p2.j].rightEdge = true;\n    } else if (p1.j == p2.j && p1.i == p2.i - 1) { // p1 on top of p2\n      let edgePair = p1.i + \"-\" + p1.j + \"-\" + p2.i + \"-\" + p2.j;\n      cloneEdges.add(edgePair);\n      cloneBoard[p1.i][p1.j].botEdge = true;\n    } else if (p1.j == p2.j && p1.i == p2.i + 1) { // p1 below p2\n      let edgePair = p2.i + \"-\" + p2.j + \"-\" + p1.i + \"-\" + p1.j;\n      cloneEdges.add(edgePair);\n      cloneBoard[p2.i][p2.j].botEdge = true;\n    }\n\n    this.setState({\n      board: cloneBoard,\n      edges: cloneEdges,\n    }) \n  }\n}\n\nremoveEdge(p1, p2) {\n  if ((p1.i == p2.i && Math.abs(p1.j - p2.j) == 1) || \n      (p1.j == p2.j && Math.abs(p1.i - p2.i) == 1)) \n  {\n    var cloneEdges = new Set(this.state.edges);\n    var cloneBoard = this.state.board.slice();\n    if (p1.i == p2.i && p1.j == p2.j - 1) { // p1 to the left of p2\n      let edgePair = p1.i + \"-\" + p1.j + \"-\" + p2.i + \"-\" + p2.j;\n      cloneEdges.delete(edgePair);\n      cloneBoard[p1.i][p1.j].rightEdge = false;\n      cloneBoard[p2.i][p2.j].leftEdge = false;\n    } else if (p1.i == p2.i && p1.j == p2.j + 1) { // p1 to the left of p2\n      let edgePair = p2.i + \"-\" + p2.j + \"-\" + p1.i + \"-\" + p1.j;\n      cloneEdges.delete(edgePair);\n      cloneBoard[p1.i][p1.j].leftEdge = false;\n      cloneBoard[p2.i][p2.j].rightEdge = false;\n    } else if (p1.j == p2.j && p1.i == p2.i - 1) { // p1 on top of p2\n      let edgePair = p1.i + \"-\" + p1.j + \"-\" + p2.i + \"-\" + p2.j;\n      cloneEdges.delete(edgePair);\n      cloneBoard[p1.i][p1.j].botEdge = false;\n      cloneBoard[p2.i][p2.j].topEdge = false;\n    } else if (p1.j == p2.j && p1.i == p2.i + 1) { // p1 below p2\n      let edgePair = p2.i + \"-\" + p2.j + \"-\" + p1.i + \"-\" + p1.j;\n      cloneEdges.delete(edgePair);\n      cloneBoard[p1.i][p1.j].topEdge = false;\n      cloneBoard[p2.i][p2.j].botEdge = false;\n    }\n\n    this.setState({\n      board: cloneBoard,\n      edges: cloneEdges,\n    }) \n  }\n}\n\nfillAllEdges() {\n  var fullEdges = new Set();\n  var cloneBoard = this.state.board.slice();\n  // horizontal edges\n  for (let i = 0 ; i < m - 1 ; i++) {\n    for (let j = 0; j < n; j++) {\n      let edge = i+\"-\"+j+\"-\"+(i+1)+\"-\"+j;\n      cloneBoard[i][j].botEdge = true;\n      fullEdges.add(edge);\n    }\n  }\n  // vertical edges\n  for (let i = 0; i < m; i++) {\n    for (let j = 0 ; j < n -1;j++ ){\n      let edge = i+\"-\"+j+\"-\"+i+\"-\"+(j+1);\n      cloneBoard[i][j].rightEdge = true;\n      fullEdges.add(edge);\n    }\n  }\n  console.log(fullEdges.size);\n\n  this.setState({\n    edges: fullEdges,\n    board: cloneBoard,\n  })\n  return fullEdges;\n}\n\n// generating algorithms\nasync dfsGenerator() {\n  if (this.isRunning || this.state.state >= 2) {return;}\n  this.isRunning = true;\n  this.reset();\n  this.setState({\n    state: 1,\n  })\n  await sleep(100);\n  let board = this.state.board.slice();\n  this.fillAllEdges();\n  await sleep(100);\n  await this.dfsGeneratorRecursive(board[0][0], board);\n  await sleep(100);\n  this.resetBoardValues();\n  this.isRunning = false;\n  this.setState({\n    state: 2,\n  })\n}\n\nasync dfsGeneratorRecursive(cell, board) {\n  board[cell.i][cell.j].value = 1;\n  this.setState({\n    board: board,\n  })\n  let randomMovement = this.randomizedChoice[Math.floor(Math.random() * 24)];\n  for (let i = 0 ; i < randomMovement.length; i++) {\n    let direction = randomMovement[i];\n    switch (direction) {\n      case(0): \n        // move up\n        if (cell.i - 1 >= 0 && board[cell.i - 1][cell.j].value != 1) {\n          this.removeEdge(board[cell.i-1][cell.j], board[cell.i][cell.j]);\n          await sleep(50);\n          await this.dfsGeneratorRecursive(board[cell.i-1][cell.j], board);\n        }\n        break;\n      case(1): \n        if (cell.j - 1 >= 0 && board[cell.i][cell.j - 1].value != 1) {\n          this.removeEdge(board[cell.i][cell.j-1], board[cell.i][cell.j]);\n          await sleep(50);\n          await this.dfsGeneratorRecursive(board[cell.i][cell.j -1], board);\n        }\n        break;\n      case(2): \n        if (cell.i + 1 < m && board[cell.i + 1][cell.j].value != 1) {\n          this.removeEdge(board[cell.i][cell.j], board[cell.i+1][cell.j]);\n          await sleep(50);\n          await this.dfsGeneratorRecursive(board[cell.i+1][cell.j], board);\n        }\n        break;\n      case(3) :\n        if (cell.j + 1 < n && board[cell.i][cell.j + 1].value != 1) {\n          this.removeEdge(board[cell.i][cell.j], board[cell.i][cell.j+1]);\n          await sleep(50);  \n          await this.dfsGeneratorRecursive(board[cell.i][cell.j + 1], board);\n        }\n        break;\n    }\n  }\n  \n}\n\nasync kruskalsGenerator() {\n  if (this.isRunning || this.state.state >= 2) {return;}\n  this.isRunning = true;\n  this.reset();\n  this.setState({\n    state: 1,\n  })\n  await sleep(500);\n  let allEdgesSet = this.fillAllEdges();\n  let allEdges = new Array();\n  allEdgesSet.forEach((edge) => {\n    allEdges.push(edge);\n  });\n  await shuffle(allEdges);\n  let allSets = Array(m).fill(null).map(() => (Array(n)));\n  for (let i = 0 ; i < m ; i++) {\n    for (let j = 0; j < n ; j++) {\n      let set = new Set();\n      set.add(i+\"-\"+j);\n      allSets[i][j] = set;\n    }\n  }\n\n  for (let i = 0 ; i < allEdges.length; i++) {\n    let split = allEdges[i].split(\"-\").map((val) => (parseInt(val)));\n    let p1 = this.state.board[split[0]][split[1]];\n    let p2 = this.state.board[split[2]][split[3]];\n    let p1str = split[0]+\"-\"+split[1];\n    let p2str = split[2]+\"-\"+split[3];\n    if (!allSets[p1.i][p1.j].has(p2str)) {\n      await sleep(50);\n      this.removeEdge(p1, p2);\n      let newSet = union(allSets[p1.i][p1.j], allSets[p2.i][p2.j]);\n      newSet.forEach((vertex) => {\n        let vertexSplit = vertex.split(\"-\").map((val) => (parseInt(val)));\n        allSets[vertexSplit[0]][vertexSplit[1]] = newSet;\n      });\n    } \n  }\n  let flashBoard = this.state.board.slice();\n  for (let i =0 ; i < m ; i ++) {\n    for (let j = 0;  j< n ;j ++) {\n      flashBoard[i][j].value = 1;\n    }\n  }\n  this.setState({\n    board: flashBoard,\n  })\n  await sleep(200);\n  this.resetBoardValues();\n  console.log(\"Kruskal's done\");\n  this.isRunning = false;\n  this.setState({\n    state: 2,\n  })\n\n}\n\nasync primsGenerator() {\n  if (this.isRunning || this.state.state >= 2) {return;}\n  this.isRunning = true;\n  this.reset();\n  this.setState({\n    state: 1,\n  })\n  await sleep(500);\n  this.fillAllEdges();\n  let randomI = Math.floor(Math.random() * m);\n  let randomJ = Math.floor(Math.random() * n);\n  let board = this.state.board.slice();\n  board[randomI][randomJ].value = 1; \n  this.setState({\n    board: board,\n  })\n  let visitedWalls = new Set();\n  let wallList = new Array();\n  if (randomI - 1 >= 0) {\n    wallList.push({i1: randomI-1, j1: randomJ, i2: randomI, j2: randomJ});\n    visitedWalls.add((randomI-1)+\"-\"+randomJ+\"-\"+randomI+\"-\"+randomJ);\n  }\n  if (randomJ - 1 >= 0) {\n    wallList.push({i1: randomI, j1: randomJ -1, i2: randomI, j2: randomJ});\n    visitedWalls.add(randomI+\"-\"+(randomJ-1)+\"-\"+randomI+\"-\"+randomJ);\n  }\n  if (randomI + 1 < m) {\n    wallList.push({i1: randomI, j1: randomJ, i2: randomI + 1, j2: randomJ});\n    visitedWalls.add(randomI+\"-\"+randomJ+\"-\"+(randomI+1)+\"-\"+randomJ);\n  }\n  if (randomJ + 1 < n) {\n    wallList.push({i1: randomI, j1: randomJ, i2: randomI, j2: randomJ + 1});\n    visitedWalls.add(randomI+\"-\"+randomJ+\"-\"+randomI+\"-\"+(randomJ+1));\n  }\n\n  while (wallList.length > 0) {\n    let choice = Math.floor(Math.random() * wallList.length);\n    let randomWall = wallList[choice];\n    await sleep(50);\n    if (board[randomWall.i1][randomWall.j1].value != 1) {\n      this.removeEdge(board[randomWall.i1][randomWall.j1], board[randomWall.i2][randomWall.j2]);\n      board[randomWall.i1][randomWall.j1].value = 1;\n      if (randomWall.i1 - 1 >= 0 && !visitedWalls.has((randomWall.i1 - 1)+\"-\"+randomWall.j1+\"-\"+randomWall.i1+\"-\"+randomWall.j1)) {\n        wallList.push({i1: randomWall.i1 - 1, j1: randomWall.j1, i2: randomWall.i1, j2: randomWall.j1});\n        visitedWalls.add((randomWall.i1 - 1)+\"-\"+randomWall.j1+\"-\"+randomWall.i1+\"-\"+randomWall.j1);\n      }\n      if (randomWall.j1 - 1 >= 0 && !visitedWalls.has(randomWall.i1+\"-\"+(randomWall.j1+1)+\"-\"+randomWall.i1+\"-\"+randomWall.j1)) {\n        wallList.push({i1: randomWall.i1, j1: randomWall.j1 - 1, i2: randomWall.i1, j2: randomWall.j1});\n        visitedWalls.add(randomWall.i1+\"-\"+(randomWall.j1+1)+\"-\"+randomWall.i1+\"-\"+randomWall.j1);\n      }\n      if (randomWall.i1 + 1 < m && !visitedWalls.has(randomWall.i1+\"-\"+randomWall.j1+\"-\"+(randomWall.i1 + 1)+\"-\"+randomWall.j1)) {\n        wallList.push({i1: randomWall.i1, j1: randomWall.j1, i2: randomWall.i1 + 1, j2: randomWall.j1});\n        visitedWalls.add(randomWall.i1+\"-\"+randomWall.j1+\"-\"+(randomWall.i1 + 1)+\"-\"+randomWall.j1);\n      }\n      if (randomWall.j1 + 1 < n && !visitedWalls.has(randomWall.i1+\"-\"+randomWall.j1+\"-\"+randomWall.i1+\"-\"+(randomWall.j1 + 1))) {\n        wallList.push({i1: randomWall.i1, j1: randomWall.j1, i2: randomWall.i1, j2: randomWall.j1 + 1});\n        visitedWalls.add(randomWall.i1+\"-\"+randomWall.j1+\"-\"+randomWall.i1+\"-\"+(randomWall.j1 + 1));\n      }\n    }\n    if (board[randomWall.i2][randomWall.j2].value != 1) {\n      this.removeEdge(board[randomWall.i1][randomWall.j1], board[randomWall.i2][randomWall.j2]);\n      board[randomWall.i2][randomWall.j2].value = 1;\n      if (randomWall.i2 - 1 >= 0 && !visitedWalls.has((randomWall.i2 - 1)+\"-\"+randomWall.j2+\"-\"+randomWall.i2+\"-\"+randomWall.j2)) {\n        wallList.push({i1: randomWall.i2 - 1, j1: randomWall.j2, i2: randomWall.i2, j2: randomWall.j2});\n        visitedWalls.add((randomWall.i2 - 1)+\"-\"+randomWall.j2+\"-\"+randomWall.i2+\"-\"+randomWall.j2);\n      }\n      if (randomWall.j2 - 1 >= 0 && !visitedWalls.has(randomWall.i2+\"-\"+(randomWall.j2+1)+\"-\"+randomWall.i2+\"-\"+randomWall.j2)) {\n        wallList.push({i1: randomWall.i2, j1: randomWall.j2 - 1, i2: randomWall.i2, j2: randomWall.j2});\n        visitedWalls.add(randomWall.i2+\"-\"+(randomWall.j2+1)+\"-\"+randomWall.i2+\"-\"+randomWall.j2);\n      }\n      if (randomWall.i2 + 1 < m && !visitedWalls.has(randomWall.i2+\"-\"+randomWall.j2+\"-\"+(randomWall.i2 + 1)+\"-\"+randomWall.j2)) {\n        wallList.push({i1: randomWall.i2, j1: randomWall.j2, i2: randomWall.i2 + 1, j2: randomWall.j2});\n        visitedWalls.add(randomWall.i2+\"-\"+randomWall.j2+\"-\"+(randomWall.i2 + 1)+\"-\"+randomWall.j2);\n      }\n      if (randomWall.j2 + 1 < n && !visitedWalls.has(randomWall.i2+\"-\"+randomWall.j2+\"-\"+randomWall.i2+\"-\"+(randomWall.j2 + 1))) {\n        wallList.push({i1: randomWall.i2, j1: randomWall.j2, i2: randomWall.i2, j2: randomWall.j2 + 1});\n        visitedWalls.add(randomWall.i2+\"-\"+randomWall.j2+\"-\"+randomWall.i2+\"-\"+(randomWall.j2 + 1));\n      }\n    }\n    this.setState({\n      board: board,\n    })\n    wallList.splice(choice, 1);\n  }\n  await sleep(100);\n  this.resetBoardValues();\n  this.setState({\n    state: 2,\n  })\n  console.log(\"Prim's finished\");\n  this.isRunning = false;\n\n}\n\nasync recursiveDivGenerator() {\n  if (this.isRunning || this.state.state >= 2){return;}\n  this.isRunning = true;\n  this.setState({\n    state: 1,\n  })\n  await sleep(100);\n  await this.recursiveDivide(0, n-1, 0, m-1);\n  let flashBoard = this.state.board.slice();\n  for (let i =0 ; i < m ; i ++) {\n    for (let j = 0;  j< n ;j ++) {\n      flashBoard[i][j].value = 1;\n    }\n  }\n  this.setState({\n    board: flashBoard,\n  })\n  await sleep(200);\n  this.resetBoardValues();\n  this.setState({\n    state: 2,\n  })\n  console.log(\"recursive divide done\");\n  this.isRunning = false;\n}\n\nasync recursiveDivide(left, right, top, bottom) { // inclusive\n  if (right === left || bottom === top) {return;}\n  await sleep(50);\n  let verDivide = left + Math.floor(Math.random() * (right - left));\n  let horDivide = top + Math.floor(Math.random() * (bottom - top));\n  \n  let board = this.state.board.slice();\n  let edges = new Set(this.state.edges);\n  for (let i = top; i <= bottom; i++) {\n    board[i][verDivide].rightEdge = true;\n    let edge = i + \"-\" + verDivide + \"-\" + i + \"-\" + (verDivide + 1);\n    edges.add(edge);\n  }\n  for (let j = left; j <= right; j++) {\n    board[horDivide][j].botEdge = true;\n    let edge = horDivide + \"-\" + j + \"-\" + (horDivide + 1) + \"-\" + j;\n    edges.add(edge);\n  }\n  this.setState({\n    board: board,\n    edges: edges, \n  })\n  await sleep(50);\n  let unpicked = Math.floor(Math.random() * 4);\n  console.log(unpicked);\n  if (unpicked != 0) { // North edge\n    let choice = top + Math.floor(Math.random() * (horDivide - top));\n    board[choice][verDivide].rightEdge = false;\n    let edge = choice + \"-\" + verDivide + \"-\" + choice + \"-\" + (verDivide + 1);\n    edges.delete(edge);\n  }\n  if (unpicked != 1) { // East edge\n    let choice = verDivide + 1 + Math.floor(Math.random() * (right - verDivide - 1));\n    board[horDivide][choice].botEdge = false;\n    let edge = horDivide + \"-\" + choice + \"-\" + (horDivide +1)+ \"-\" + choice;\n    edges.delete(edge);\n  }\n  if (unpicked != 2) { // South edge\n    let choice = horDivide + 1 + Math.floor(Math.random() * (bottom - horDivide -1));\n    board[choice][verDivide].rightEdge = false;\n    let edge = choice + \"-\" + verDivide + \"-\" + choice + \"-\" + (verDivide + 1);\n    edges.delete(edge);\n  }\n  if (unpicked != 3) { // West edge\n    let choice = left + Math.floor(Math.random() * (verDivide - left));\n    board[horDivide][choice].botEdge = false;\n    let edge = horDivide + \"-\" + choice + \"-\" + (horDivide+1) + \"-\" + choice; \n    edges.delete(edge);\n  }\n  this.setState({\n    board: board,\n    edges: edges,\n  })\n  await sleep(50);\n  await this.recursiveDivide(left, verDivide, top, horDivide);\n  await sleep(50);\n  await this.recursiveDivide(verDivide+1, right, top, horDivide);\n  await sleep(50);\n  await this.recursiveDivide(left, verDivide, horDivide+1, bottom);\n  await sleep(50);\n  await this.recursiveDivide(verDivide+1, right, horDivide+1, bottom);\n}\n\nasync reset() {\n  if (this.isRunning) {return;}\n  let defaultBoard = Array(m).fill(null).map(() => (Array(n)));\n  defaultBoard[0][0] = {i: 0, j: 0, value: 0, leftEdge: false, rightEdge: false, topEdge: true, botEdge: false}\n  defaultBoard[0][n-1] = {i: 0, j: n-1, value: 0, leftEdge: false, rightEdge: true, topEdge: true, botEdge:false}\n  defaultBoard[m-1][0] = {i: m-1, j: 0, value: 0, leftEdge: true, rightEdge: false, topEdge: false, botEdge:true}\n  defaultBoard[m-1][n-1] = {i: m-1, j: n-1, value: 0, leftEdge: false, rightEdge: true, topEdge: false, botEdge: false}\n\n  // top board edge\n  for (let j = 1; j < n - 1; j++) {\n    defaultBoard[0][j] = {i: 0, j: j, value: 0, leftEdge: false, rightEdge: false, topEdge: true, botEdge: false}\n  }\n  // left board edge\n  for (let i = 1; i < m-1; i++) {\n    defaultBoard[i][0] = {i:i, j: 0, value: 0, leftEdge: true, rightEdge: false, topEdge: false, botEdge: false}\n  }\n  // bot board edge\n  for (let j= 1; j < n-1; j++) {\n    defaultBoard[m-1][j] = {i: m-1, j: j, value: 0, leftEdge: false, rightEdge: false, topEdge: false,  botEdge: true}\n  }\n  // right board edge\n  for (let i= 1; i < m-1; i++) {\n    defaultBoard[i][n-1] = {i: i, j: n-1, value: 0, leftEdge: false, rightEdge: true, topEdge: false,  botEdge: false}\n  }\n  for (let i = 1 ; i < defaultBoard.length - 1; i++) {\n      for (let j = 1; j < defaultBoard[0].length - 1; j++) {\n          defaultBoard[i][j] = {\n            i: i,\n            j: j, \n            value: 0,\n            leftEdge: false, \n            rightEdge: false,\n            topEdge: false,\n            botEdge: false,\n          };\n      }\n  }\n  this.setState({\n      board: defaultBoard,\n      edges: new Set(),\n      state: 0,\n  });\n}\n\nresetBoardValues() {\n  let resetBoard = this.state.board.slice();\n  for (let i =0 ; i < m ; i ++) {\n    for (let j = 0;  j< n ;j ++) {\n      resetBoard[i][j].value = 0;\n    }\n  }\n  this.setState({\n    board: resetBoard,\n    state: 0\n  });\n}\n\n// solving algorithms\nasync bfs() {\n  if (this.isRunning) {return;}\n  this.isRunning = true;\n  let board = this.state.board.slice();\n  this.resetBoardValues();\n\n  let visited = Array(m).fill(null).map(() => (Array(n)));\n  let oldFrontier = [board[0][0]];\n  let newFrontier = new Array();\n  board[0][0].value = 2;\n  visited[0][0] = 0;\n  this.setState({\n    board: board,\n  })\n  this.setState({\n    state: 3,\n  })\n  await sleep(100);\n\n  while (oldFrontier.length != 0) {\n    let level = visited[oldFrontier[0].i][oldFrontier[0].j];\n    let foundExit = false;\n    for (let i = 0 ; i < oldFrontier.length; i++) {\n      let foc = oldFrontier[i];\n      if (foc.i - 1 >= 0 && (!this.state.edges.has((foc.i-1)+\"-\"+foc.j+\"-\"+foc.i+\"-\"+foc.j)) && board[foc.i-1][foc.j].value != 2) {\n        visited[foc.i-1][foc.j] = level + 1;\n        board[foc.i-1][foc.j].value = 2;\n        newFrontier.push(board[foc.i -1][foc.j]);\n        if (foc.i-1 == m-1 && foc.j == n-1) {foundExit = true; break;}\n      }\n      if (foc.j - 1 >= 0 && (!this.state.edges.has(foc.i+\"-\"+(foc.j-1)+\"-\"+foc.i+\"-\"+foc.j)) && board[foc.i][foc.j -1].value != 2) {\n        visited[foc.i][foc.j-1] = level + 1;\n        board[foc.i][foc.j-1].value = 2;\n        newFrontier.push(board[foc.i][foc.j -1]);\n        if (foc.i == m-1 && foc.j-1 == n-1) {foundExit = true; break;}\n      }\n      if (foc.i + 1 < m && (!this.state.edges.has(foc.i+\"-\"+foc.j+\"-\"+(foc.i+1)+\"-\"+foc.j)) && board[foc.i + 1][foc.j].value != 2) {\n        visited[foc.i+1][foc.j] = level + 1;\n        board[foc.i+1][foc.j].value = 2;\n        newFrontier.push(board[foc.i+1][foc.j]);\n        if (foc.i+1 == m-1 && foc.j == n-1) {foundExit = true; break;}\n      }\n      if (foc.j + 1 < n && (!this.state.edges.has(foc.i+\"-\"+foc.j+\"-\"+foc.i+\"-\"+(foc.j+1))) && board[foc.i][foc.j + 1].value != 2) {\n        visited[foc.i][foc.j + 1] = level + 1;\n        board[foc.i][foc.j + 1].value = 2;\n        newFrontier.push(board[foc.i][foc.j +1]);\n        if (foc.i == m-1 && foc.j+1 == n-1) {foundExit = true; break;}\n      }\n    }\n    oldFrontier = JSON.parse(JSON.stringify(newFrontier));\n    this.setState({\n      board: board,\n    })\n    await sleep(100);\n    newFrontier = new Array();\n    if(foundExit) {break;}\n  }\n  await sleep(100);\n  this.resetBoardValues();\n  let path = new Array();\n  path.unshift({i: m-1, j: n-1});\n  while (path.length == 0 || path[0].i != 0 || path[0].j != 0) {\n    let foc = path[0];\n    if (foc.i - 1 >= 0 && (!this.state.edges.has((foc.i-1)+\"-\"+foc.j+\"-\"+foc.i+\"-\"+foc.j)) \n      && visited[foc.i-1][foc.j] == visited[foc.i][foc.j] - 1) {\n        path.unshift({i: foc.i-1, j: foc.j});\n    } else if (foc.j - 1 >= 0 && (!this.state.edges.has(foc.i+\"-\"+(foc.j-1)+\"-\"+foc.i+\"-\"+foc.j)) \n      && visited[foc.i][foc.j-1] == visited[foc.i][foc.j] - 1) {\n        path.unshift({i: foc.i, j: foc.j-1});\n        continue;\n    } else if (foc.i + 1 < m && (!this.state.edges.has(foc.i+\"-\"+foc.j+\"-\"+(foc.i+1)+\"-\"+foc.j)) \n      && visited[foc.i+1][foc.j] == visited[foc.i][foc.j] - 1) {\n        path.unshift({i: foc.i+1, j: foc.j});\n        continue;\n    }else if (foc.j + 1 < n && (!this.state.edges.has(foc.i+\"-\"+foc.j+\"-\"+foc.i+\"-\"+(foc.j +1)))\n      && visited[foc.i][foc.j+1] == visited[foc.i][foc.j] - 1) {\n        path.unshift({i: foc.i, j: foc.j+1});\n        continue;\n    }\n  }\n  await sleep(200);\n  for (let i = 0; i < path.length; i++) {\n    board = this.state.board.slice();\n    board[path[i].i][path[i].j].value = 2;\n    this.setState({\n      board: board,\n    })\n    await sleep(100);\n  }\n  this.setState({\n    state: 4,\n  })\n  this.isRunning = false;\n  console.log(\"BFS done\");\n}\n\nasync wallHugger() {\n  if (this.isRunning) {return;}\n  if (!this.isMapGenerated()) {\n    alert(\"A maze is not generated yet.\")\n    return;\n  }\n  this.resetBoardValues();\n  this.setState({\n    state: 3,\n  })\n  this.isRunning = true;\n  let posI = 0;\n  let posJ = 0;\n  let board = this.state.board.slice();\n  board[posI][posJ].value = 2;\n  this.setState({\n    board: board,\n  })\n  this.resetBoardValues();\n  await sleep(100);\n  let facing = 0; // 0 - north, 1 - east, 2 - south , 3 - west\n  while (posI != m-1 || posJ != n-1) {\n    console.log(posI + \" \" + posJ + \" \" + facing);\n    board[posI][posJ].value = 0;\n    switch (facing) {\n      case (0) :\n        if (posJ + 1 < n && !this.state.edges.has(posI + \"-\" + posJ + \"-\" + posI + \"-\" + (posJ+1))) { // can travel right\n          posJ = posJ + 1;\n          facing = 1;\n        } else if (posI - 1 >= 0 && !this.state.edges.has((posI-1) + \"-\" + posJ +\"-\" + posI + \"-\" + posJ)) { // can travel forward\n          posI = posI - 1;\n        } else if (posJ - 1 >= 0 && !this.state.edges.has(posI + \"-\" + (posJ-1)+ \"-\" + posI + \"-\" + posJ)) {  // can travel left\n          posJ = posJ -1;\n          facing = 3\n        } else { // can travel backwards\n          posI = posI + 1; \n          facing = 2;\n        }\n        break;\n      case (1) :\n        if (posI + 1 < m && !this.state.edges.has(posI + \"-\" + posJ + \"-\" + (posI+1) + \"-\" + posJ)) {\n          posI = posI + 1;\n          facing = 2;\n        } else if (posJ + 1 < n && !this.state.edges.has(posI + \"-\" + posJ + \"-\" + posI + \"-\" + (posJ+1))) {\n          posJ = posJ + 1;\n          facing = 1;\n        } else if (posI - 1 >= 0 && !this.state.edges.has((posI-1) + \"-\" + posJ +\"-\" + posI + \"-\" + posJ)) {\n          posI = posI - 1;\n          facing = 0;\n        } else {\n          posJ = posJ -1;\n          facing = 3\n        }\n        break;\n      case (2) :\n        if (posJ - 1 >= 0 && !this.state.edges.has(posI + \"-\" + (posJ-1)+ \"-\" + posI + \"-\" + posJ)) {\n          posJ = posJ -1;\n          facing = 3\n        } else if (posI + 1 < m && !this.state.edges.has(posI + \"-\" + posJ + \"-\" + (posI+1) + \"-\" + posJ)) {\n          posI = posI + 1;\n          facing = 2;\n        } else if (posJ + 1 < n && !this.state.edges.has(posI + \"-\" + posJ + \"-\" + posI + \"-\" + (posJ+1))) {\n          posJ = posJ + 1;\n          facing = 1;\n        } else {\n          posI = posI - 1;\n          facing = 0;\n        }\n        break;\n      case (3) : \n        if (posI - 1 >= 0 && !this.state.edges.has((posI-1) + \"-\" + posJ +\"-\" + posI + \"-\" + posJ)) {\n          posI = posI - 1;\n          facing = 0;\n        } else if (posJ - 1 >= 0 && !this.state.edges.has(posI + \"-\" + (posJ-1)+ \"-\" + posI + \"-\" + posJ)) {\n          posJ = posJ -1;\n          facing = 3\n        } else if (posI + 1 < m && !this.state.edges.has(posI + \"-\" + posJ + \"-\" + (posI+1) + \"-\" + posJ)) {\n          posI = posI + 1;\n          facing = 2;\n        } else {\n          posJ = posJ + 1;\n          facing = 1;\n        }\n        break;\n    }\n    board[posI][posJ].value = 2;\n    this.setState({\n      board: board,\n    })\n    await sleep(100);\n  }\n  this.setState({\n    state: 4,\n  })\n  this.isRunning = false;\n  console.log(\"wallhugger done\");\n\n}\nisMapGenerated() {\n  for (let i = 1 ; i < m-1; i ++) {\n    for (let j = 1; j < n-1; j++) {\n      if (this.state.board[i][j].rightEdge||\n          this.state.board[i][j].leftEdge||\n          this.state.board[i][j].botEdge|| \n          this.state.board[i][j].topEdge) {\n            return true;\n      }\n    }\n  }\n  return false;\n}\n\nasync aStar() {\n  if (this.isRunning) {return;}\n  this.setState({\n    state: 3,\n  })\n  this.isRunning = true;\n  this.resetBoardValues();\n\n\n  let h = Array(m).fill(null).map(() => (Array(n)));\n  for (let i = 0 ; i < m ; i ++ ){\n    for (let j = 0; j < n; j++) {\n      h[i][j] = m+n-2-i-j;\n    }\n  }\n  let cloneBoard = this.state.board.slice();\n  let openSet = new Heapify(m*n);\n  let openSetStr = new Set();\n\n  let cameFrom = Array(m).fill(null).map(() => (Array(n)));\n  let gScore = Array(m).fill(null).map(() => (Array(n)));\n  let fScore = Array(m).fill(null).map(() => (Array(n)));\n  for (let i = 0; i < m ; i++) {\n    for (let j = 0 ; j < n; j++) {\n      gScore[i][j] = Number.MAX_SAFE_INTEGER;\n      fScore[i][j] = Number.MAX_SAFE_INTEGER;\n    }\n  }\n  cameFrom[0][0] = null;\n  gScore[0][0] = 0;\n  fScore[0][0] = h[0][0];\n  openSet.push(0*100 + 0, fScore[0][0]);\n  openSetStr.add(\"0-0\");\n  cloneBoard[0][0].value = 2;\n  this.setState({\n    board: cloneBoard\n  });\n  await sleep(100);\n\n  let path = null;\n  while (openSet.size != 0) {\n    let focN = openSet.pop();\n    let foc = {i: Math.floor(focN/100), j : focN%100};\n    if (foc.i == m-1 && foc.j == n-1) {\n      path = this.reconstructPath(cameFrom, foc);\n      break;\n    }\n    if (foc.i - 1 >= 0 && !this.state.edges.has((foc.i-1)+\"-\"+foc.j+\"-\"+foc.i+\"-\"+foc.j)) {\n      let tentativeGScore = gScore[foc.i][foc.j] + 1;\n      if (tentativeGScore < gScore[foc.i-1][foc.j]) {\n        cameFrom[foc.i-1][foc.j] = foc;\n        gScore[foc.i-1][foc.j] = tentativeGScore;\n        fScore[foc.i-1][foc.j] = gScore[foc.i-1][foc.j] + h[foc.i-1][foc.j];\n        if (!openSetStr.has((foc.i-1)+\"-\"+foc.j)) {\n          openSet.push((foc.i-1) *100 +foc.j, fScore[foc.i-1][foc.j]);\n          openSetStr.add((foc.i-1)+\"-\"+foc.j);\n          cloneBoard[foc.i-1][foc.j].value = 2;\n        }\n      }\n    }\n    if (foc.j - 1 >= 0 && !this.state.edges.has(foc.i+\"-\"+(foc.j-1)+\"-\"+foc.i+\"-\"+foc.j)) {\n      let tentativeGScore = gScore[foc.i][foc.j] + 1;\n      if (tentativeGScore < gScore[foc.i][foc.j-1]) {\n        cameFrom[foc.i][foc.j-1] = foc;\n        gScore[foc.i][foc.j-1] = tentativeGScore;\n        fScore[foc.i][foc.j-1] = gScore[foc.i][foc.j-1] + h[foc.i][foc.j-1];\n        if (!openSetStr.has(foc.i+\"-\"+(foc.j-1))) {\n          openSet.push(foc.i * 100 +(foc.j-1), fScore[foc.i][foc.j-1]);\n          openSetStr.add(foc.i+\"-\"+(foc.j-1));\n          cloneBoard[foc.i][foc.j-1].value = 2;\n        }\n      }\n    }\n    if (foc.i + 1 < m && !this.state.edges.has(foc.i+\"-\"+foc.j+\"-\"+(foc.i+1)+\"-\"+foc.j)) {\n      let tentativeGScore = gScore[foc.i][foc.j] + 1;\n      if (tentativeGScore < gScore[foc.i+1][foc.j]) {\n        cameFrom[foc.i+1][foc.j] = foc;\n        gScore[foc.i+1][foc.j] = tentativeGScore;\n        fScore[foc.i+1][foc.j] = gScore[foc.i+1][foc.j] + h[foc.i+1][foc.j];\n        if (!openSetStr.has((foc.i+1)+\"-\"+foc.j)) {\n          openSet.push((foc.i+1)*100 +foc.j, fScore[foc.i+1][foc.j]);\n          openSetStr.add((foc.i+1)+\"-\"+foc.j);\n          cloneBoard[foc.i+1][foc.j].value = 2;\n        }\n      }\n    }\n    if (foc.j + 1 < n && !this.state.edges.has(foc.i+\"-\"+foc.j+\"-\"+foc.i+\"-\"+(foc.j+1))) {\n      let tentativeGScore = gScore[foc.i][foc.j] + 1;\n      if (tentativeGScore < gScore[foc.i][foc.j+1]) {\n        cameFrom[foc.i][foc.j+1] = foc;\n        gScore[foc.i][foc.j+1] = tentativeGScore;\n        fScore[foc.i][foc.j+1] = gScore[foc.i][foc.j+1] + h[foc.i][foc.j+1];\n        if (!openSetStr.has(foc.i+\"-\"+(foc.j+1))) {\n          openSet.push(foc.i * 100 +( foc.j+1), fScore[foc.i][foc.j+1]);\n          openSetStr.add(foc.i+\"-\"+(foc.j+1));\n          cloneBoard[foc.i][foc.j+1].value = 2;\n        }\n      }\n    }\n    this.setState({\n      board: cloneBoard\n    });\n    await sleep(100);\n  }\n  await sleep(100);\n  this.resetBoardValues();\n  await sleep(200);\n  if (path != null) {\n    for (let i = 0 ; i < path.length; i++) {\n      cloneBoard = this.state.board.slice();\n      cloneBoard[path[i].i][path[i].j].value = 2;\n      this.setState({\n        board: cloneBoard,\n      })\n      await sleep(100);\n    }\n  }\n  this.setState({\n    state: 4,\n  })\n  this.isRunning = false;\n  console.log(\"done A*\");\n}\nreconstructPath(cameFrom, foc) {\n  let totalPath = [foc];\n  while (foc != null) {\n    foc = cameFrom[foc.i][foc.j];\n    totalPath.unshift(foc);\n  }\n  totalPath.shift();\n  return totalPath;\n}\n\nrender() {\n    return (\n    <div className=\"game\">\n        <div className=\"game-info\">\n            <div >To A Maze (do you know the way?)</div>\n            <div>\n              <div style={{font: '14px'}}>Generation</div>\n                <button onClick={() => this.dfsGenerator()}>DFS</button>\n                <button onClick={() => this.kruskalsGenerator()}>Kruskal's</button>\n                <br></br>\n                <button onClick={() => this.primsGenerator()}>Prim's</button>\n                <button onClick={() => this.recursiveDivGenerator()}>Recursive Division</button>\n                \n            </div>\n            <br></br>\n            <div>\n                <div style={{font: '14px'}}>Solution</div>\n                <button onClick={() => this.wallHugger()}>Wall hugger</button>\n                <button onClick={() => this.aStar()}>A*</button>\n                <button onClick={() => this.bfs()}>BFS</button>\n            </div>\n            <br></br>\n            <div>{\n                this.state.state == 0 && \n                <div>Maze is empty</div>\n            }\n            {\n                this.state.state == 1 && \n                <div>Generating maze...</div>\n            }    \n            {\n                this.state.state == 2 && \n                <div>Maze is generated</div>\n            }    \n            {\n                this.state.state == 3 && \n                <div>Finding exit...</div>\n            }       \n            {\n                this.state.state == 4 && \n                <div>Exit is found!</div>\n            }       \n            </div>\n            <br></br>\n            <button onClick={() => this.reset()}>Reset</button>\n        </div>\n        <div className=\"game-board\">\n        <Board\n            board={this.state.board}\n        />\n        </div>\n    </div>\n    );\n}\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}